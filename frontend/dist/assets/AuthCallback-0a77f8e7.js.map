{"version":3,"file":"AuthCallback-0a77f8e7.js","sources":["../../src/pages/AuthCallback.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { useAuth } from \"@/context/AuthContext\";\r\nimport { setAuthToken } from \"@/services/api\";\r\nimport { authService } from \"@/services/auth\";\r\nimport toast from \"react-hot-toast\";\r\nimport LoadingSpinner from \"@/components/ui/LoadingSpinner\";\r\n\r\nconst AuthCallback: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const { setUserFromToken } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const handleCallback = async () => {\r\n      const token = searchParams.get(\"token\");\r\n      const error = searchParams.get(\"error\");\r\n\r\n      if (error) {\r\n        let errorMessage = \"Authentication failed\";\r\n        switch (error) {\r\n          case \"auth_failed\":\r\n            errorMessage = \"Google authentication failed\";\r\n            break;\r\n          case \"server_error\":\r\n            errorMessage = \"Server error during authentication\";\r\n            break;\r\n          case \"oauth_failed\":\r\n            errorMessage = \"OAuth process failed\";\r\n            break;\r\n          default:\r\n            errorMessage = \"Authentication error occurred\";\r\n        }\r\n        toast.error(errorMessage);\r\n        navigate(\"/login\");\r\n        return;\r\n      }\r\n\r\n      if (token) {\r\n        try {\r\n          // Set the token in localStorage and axios headers\r\n          setAuthToken(token);\r\n          \r\n          // Get user data\r\n          const user = await authService.getMe();\r\n          \r\n          // Update auth context\r\n          setUserFromToken(user);\r\n          \r\n          toast.success(\"Successfully logged in with Google!\");\r\n          \r\n          // Redirect based on user role\r\n          if (user.role === \"admin\") {\r\n            navigate(\"/admin\");\r\n          } else {\r\n            navigate(\"/\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error processing auth callback:\", error);\r\n          toast.error(\"Failed to complete authentication\");\r\n          navigate(\"/login\");\r\n        }\r\n      } else {\r\n        toast.error(\"No authentication token received\");\r\n        navigate(\"/login\");\r\n      }\r\n    };\r\n\r\n    handleCallback();\r\n  }, [searchParams, navigate, setUserFromToken]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n      <div className=\"text-center\">\r\n        <LoadingSpinner />\r\n        <p className=\"mt-4 text-gray-600\">Completing authentication...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthCallback;\r\n"],"names":["AuthCallback","navigate","useNavigate","searchParams","useSearchParams","setUserFromToken","useAuth","useEffect","token","error","errorMessage","toast","setAuthToken","user","authService","jsxs","jsx","LoadingSpinner"],"mappings":"gGAQA,MAAMA,EAAyB,IAAM,CACnC,MAAMC,EAAWC,IACX,CAACC,CAAY,EAAIC,IACjB,CAAE,iBAAAC,GAAqBC,IAE7BC,OAAAA,EAAAA,UAAU,IAAM,EACS,SAAY,CAC3B,MAAAC,EAAQL,EAAa,IAAI,OAAO,EAChCM,EAAQN,EAAa,IAAI,OAAO,EAEtC,GAAIM,EAAO,CACT,IAAIC,EAAe,wBACnB,OAAQD,EAAO,CACb,IAAK,cACYC,EAAA,+BACf,MACF,IAAK,eACYA,EAAA,qCACf,MACF,IAAK,eACYA,EAAA,uBACf,MACF,QACiBA,EAAA,+BACnB,CACAC,EAAM,MAAMD,CAAY,EACxBT,EAAS,QAAQ,EACjB,MACF,CAEA,GAAIO,EACE,GAAA,CAEFI,EAAaJ,CAAK,EAGZ,MAAAK,EAAO,MAAMC,EAAY,QAG/BT,EAAiBQ,CAAI,EAErBF,EAAM,QAAQ,qCAAqC,EAG/CE,EAAK,OAAS,QAChBZ,EAAS,QAAQ,EAEjBA,EAAS,GAAG,QAEPQ,EAAO,CACN,QAAA,MAAM,kCAAmCA,CAAK,EACtDE,EAAM,MAAM,mCAAmC,EAC/CV,EAAS,QAAQ,CACnB,MAEAU,EAAM,MAAM,kCAAkC,EAC9CV,EAAS,QAAQ,CACnB,IAID,EAAA,CAACE,EAAcF,EAAUI,CAAgB,CAAC,QAG1C,MAAI,CAAA,UAAU,2DACb,SAACU,EAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAA,IAACC,EAAe,EAAA,EACfD,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAA4B,+BAAA,CAAA,CAChE,CAAA,CACF,CAAA,CAEJ"}